#!/usr/bin/env bash

#/ command: rundeck-acls:list: "list acl policies"
#/ usage: rerun rundeck-acls:list  --url <$RUNDECK_URL> [ --username <$RUNDECK_USER>] [ --password <$RUNDECK_PASSWORD>] [ --apikey <$RUNDECK_APIKEY>] 
#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: URL USERNAME PASSWORD APIKEY PROJECT


. $RERUN_MODULE_DIR/lib/functions.sh list || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}


set -o errexit -o nounset -o pipefail

rerun_options_parse "$@"

if [[ -n "${PROJECT:-}" ]]
then
	APIURL="${URL}/api/15/project/$PROJECT/acl/"
else
	APIURL="${URL}/api/15/system/acl/"
fi

#
# Read authentication credentials
#
rundeck_authenticate -u "$URL" -U "${USERNAME:-}" -p "${PASSWORD:-}" -k "${APIKEY:-}"


CURL_OUT=$(mktemp -t curl.out.XXXXX)
trap 'rm $CURL_OUT' EXIT; # cleanup on exit

if ! http_code=$(rundeck_curl -w "%{http_code}" -H "Accept:application/xml" \
	-X GET "${APIURL}" -o $CURL_OUT)
then
	rerun_die 3 "curl request failed (exit code: $?)"
fi	

case ${http_code:-} in
   	200) : ;; # successful
	40*) rerun_die "'$(xmlstarlet sel -t -m //error -v message -n $CURL_OUT)'" ;;
	* ) rerun_die 3 "API error ${http_code:-} : ${APIURL}"
esac  

if ! xmlstarlet sel -t -m '/resource/contents/resource' -v @path -n $CURL_OUT
then
	rerun_log debug "No ACL policies exist for this instance."
fi


# Done. Exit with last command exit status.
exit $?

