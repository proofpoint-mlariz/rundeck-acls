#!/usr/bin/env bash

#/ command: rundeck-acls:get: "get an ACL policy"
#/ usage: rerun rundeck-acls:get  --url <$RUNDECK_URL> [ --username <$RUNDECK_USER>] [ --password <$RUNDECK_PASSWORD>] [ --apikey <$RUNDECK_APIKEY>]  --aclpolicy <> 
#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: URL USERNAME PASSWORD APIKEY ACLPOLICY



. $RERUN_MODULE_DIR/lib/functions.sh get || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

set -o errexit -o nounset -o pipefail



rerun_options_parse "$@"


# Command implementation
# ----------------------
rundeck_authenticate -u "$URL" -U "$USERNAME" -p "${PASSWORD:-}" -k "${APIKEY:-}"

CURL_OUT=$(mktemp -t curl.out.XXXXXXXXXX)
trap 'rm $CURL_OUT' EXIT; # cleanup on exit

if ! http_code=$(rundeck_curl -w "%{http_code}" -H "Accept: application/xml" \
	-X GET ${URL}/api/14/system/acl/$ACLPOLICY -o $CURL_OUT)
then
	rerun_die 3 "curl request failed (exit code: $?)"
fi


case ${http_code:-} in
   	200) : ;; # successful
	40*) rerun_die "$(xmlstarlet sel -t -m //error -v message $CURL_OUT)" ;;
	* ) rerun_die 3 "API error ${http_code:-}: ${URL}/api/14/system/acl/$ACLPOLICY"
esac  


if ! xmlstarlet sel -t -m '/' -v contents -n $CURL_OUT
then
	rerun_die "The ACL policy had no content: $ACLPOLICY"
fi
# Done. Exit with last command exit status.
exit $?

